package handlers

import (
	"strconv"
	"strings"

	"groupie/internal/parseJson"
)

func Search(search_input string) []parseJson.AutoGenerated {
	var data []parseJson.AutoGenerated
	var isFound bool = false
	for i := range parseJson.Artists {

		if caseIns(parseJson.Artists[i].Name, search_input) {
			isFound = true
			data = append(data, parseJson.Artists[i])

		}

		for j := range parseJson.Artists[i].Cities {
			if caseIns(parseJson.Artists[i].Cities[j], search_input) {
				isFound = true
				data = append(data, parseJson.Artists[i])

			}
		}

		if search_input == parseJson.Artists[i].FirstAlbum {
			isFound = true
			data = append(data, parseJson.Artists[i])

		}

		if search_input == strconv.Itoa(parseJson.Artists[i].CreationDate) {
			isFound = true
			data = append(data, parseJson.Artists[i])

		}
		for j := range parseJson.Artists[i].Members {
			if caseIns(parseJson.Artists[i].Members[j], search_input) {
				isFound = true
				data = append(data, parseJson.Artists[i])

			}
		}
	}

	if isFound {
		a := checkSearch(data)

		return a
	}
	return nil
}

func caseIns(str1, str2 string) bool {
	return strings.Contains(
		strings.ToLower(str1),
		strings.ToLower(str2),
	)
}

func checkSearch(data []parseJson.AutoGenerated) []parseJson.AutoGenerated {
	newData := []parseJson.AutoGenerated{}
	var contains bool = false
	for i := range data {
		for j := range newData {
			if data[i].Name == newData[j].Name {
				contains = true
				break
			}
		}
		if !contains {
			newData = append(newData, data[i])
		}
		contains = false
	}
	return newData
}
